{"ast":null,"code":"var _jsxFileName = \"/home/eilif/work_projects/portfolio-site/nextjs_app/components/navbar/DarkModeToggle.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { useTheme } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\n\nconst DarkModeToggle = () => {\n  const {\n    0: isClient,\n    1: setIsClient\n  } = useState(false);\n  const {\n    value: isDark,\n    toggle: toggleDarkMode\n  } = useDarkMode();\n  console.log(isDark);\n  const theme = useTheme();\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n  return __jsx(React.Fragment, null, isClient && __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: toggleDarkMode,\n      inputProps: {\n        'aria-label': 'darkmode toggle'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }),\n    label: __jsx(Brightness4Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }\n    }),\n    name: \"darkmode toggle\",\n    checked: isDark,\n    style: {\n      paddingLeft: theme.spacing(1)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default DarkModeToggle;","map":{"version":3,"sources":["/home/eilif/work_projects/portfolio-site/nextjs_app/components/navbar/DarkModeToggle.jsx"],"names":["useState","useEffect","useDarkMode","useTheme","FormControlLabel","Switch","Brightness4Icon","DarkModeToggle","isClient","setIsClient","value","isDark","toggle","toggleDarkMode","console","log","theme","paddingLeft","spacing"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEU,IAAAA,KAAK,EAAEC,MAAT;AAAiBC,IAAAA,MAAM,EAAEC;AAAzB,MAA4CX,WAAW,EAA7D;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,QAAMK,KAAK,GAAGb,QAAQ,EAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,4BACGD,QAAQ,IACP,MAAC,gBAAD;AACE,IAAA,OAAO,EAAE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEK,cAAlB;AAAkC,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX;AAEE,IAAA,KAAK,EAAE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFT;AAGE,IAAA,IAAI,EAAC,iBAHP;AAIE,IAAA,OAAO,EAAEF,MAJX;AAKE,IAAA,KAAK,EAAE;AAAEM,MAAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd;AAAf,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAaD,CAvBD;;AAyBA,eAAeX,cAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport useDarkMode from 'use-dark-mode'\nimport { useTheme } from '@material-ui/core'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\n\nconst DarkModeToggle = () => {\n  const [isClient, setIsClient] = useState(false)\n  const { value: isDark, toggle: toggleDarkMode } = useDarkMode()\n  console.log(isDark)\n  const theme = useTheme()\n\n  useEffect(() => {\n    setIsClient(true)\n  }, [])\n\n  return (\n    <>\n      {isClient && (\n        <FormControlLabel\n          control={<Switch onChange={toggleDarkMode} inputProps={{ 'aria-label': 'darkmode toggle' }} />}\n          label={<Brightness4Icon />}\n          name='darkmode toggle'\n          checked={isDark}\n          style={{ paddingLeft: theme.spacing(1) }}\n        />)}\n    </>\n\n  )\n}\n\nexport default DarkModeToggle\n"]},"metadata":{},"sourceType":"module"}