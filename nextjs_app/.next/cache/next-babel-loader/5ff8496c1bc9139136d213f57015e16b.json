{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport default function useScrolled() {\n  _s();\n\n  var _useState = useState(false),\n      isScrolled = _useState[0],\n      setIsScrolled = _useState[1];\n\n  var handleScroll = function handleScroll(elTopOffset, elHeight) {\n    if (window.pageYOffset > elTopOffset + elHeight) {\n      setIsScrolled(true);\n    } else {\n      setIsScrolled(false);\n    }\n  };\n\n  useEffect(function () {\n    var el = document.querySelector('#the-navbar').getBoundingClientRect();\n\n    var handleScrollEvent = function handleScrollEvent() {\n      handleScroll(el.top, el.height);\n    };\n\n    window.addEventListener('scroll', handleScrollEvent);\n    return function () {\n      window.removeEventListener('scroll', handleScrollEvent);\n    };\n  }, []);\n  return isScrolled;\n}\n\n_s(useScrolled, \"UCaI8lpZVGvPrsRoIFYRt2wv0+o=\");","map":{"version":3,"sources":["/home/eilif/work_projects/portfolio-site/nextjs_app/hooks/useScrolled.jsx"],"names":["useState","useEffect","useScrolled","isScrolled","setIsScrolled","handleScroll","elTopOffset","elHeight","window","pageYOffset","el","document","querySelector","getBoundingClientRect","handleScrollEvent","top","height","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,WAAT,GAAwB;AAAA;;AAAA,kBACDF,QAAQ,CAAC,KAAD,CADP;AAAA,MAC9BG,UAD8B;AAAA,MAClBC,aADkB;;AAGrC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAcC,QAAd,EAA2B;AAC9C,QAAIC,MAAM,CAACC,WAAP,GAAsBH,WAAW,GAAGC,QAAxC,EAAmD;AACjDH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAND;;AAQAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,qBAAtC,EAAX;;AACA,QAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BT,MAAAA,YAAY,CAACK,EAAE,CAACK,GAAJ,EAASL,EAAE,CAACM,MAAZ,CAAZ;AACD,KAFD;;AAIAR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCH,iBAAlC;AAEA,WAAO,YAAM;AACXN,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCJ,iBAArC;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAOX,UAAP;AACD;;GAzBuBD,W","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport default function useScrolled () {\n  const [isScrolled, setIsScrolled] = useState(false)\n\n  const handleScroll = (elTopOffset, elHeight) => {\n    if (window.pageYOffset > (elTopOffset + elHeight)) {\n      setIsScrolled(true)\n    } else {\n      setIsScrolled(false)\n    }\n  }\n\n  useEffect(() => {\n    const el = document.querySelector('#the-navbar').getBoundingClientRect()\n    const handleScrollEvent = () => {\n      handleScroll(el.top, el.height)\n    }\n\n    window.addEventListener('scroll', handleScrollEvent)\n\n    return () => {\n      window.removeEventListener('scroll', handleScrollEvent)\n    }\n  }, [])\n\n  return isScrolled\n}\n"]},"metadata":{},"sourceType":"module"}